package ch07;

public interface _05_Car {
			/*
			 * 	[면접]	추상클래스 VS  인터페이스
			 * 	- 기능정의서 (표준 작업명세서) >강제성과 통일성
			 * 	- 설계(선언)와 구현을 분리시키는 것을 가능하게 한다.
			 * 	 (설계 : 인터페이스, 구현 : 자식클래스)
			 * 	- 객체생성 불가능하며,객체 Type으로는 가능(다형성 적용시 Type으로 가능)
			 * 	- 인터페이스의 멤버는 상수(static final 생략가능) , 추상메소드(abstract 생략가능)만 올 수 있다.
			 * 	- 단 static 메소드, default 메소드,  private 메소드는 예외(JDK 1.8부터)
			 * 	- 인터페이스를 implements (=구현)할 자식클래스에서 추상메소드를 재정의한다.
			 * 	
			 * 	1. 인터페이스 작성
			 * 	interface 인터페이스명 {
			 * 		// 상수
			 * 		public static final 데이터타입 대문자 상수명 = 값;
			 * 	
			 * 		//추상 메소드
			 * 		public 반환형 추상메소드 ( 매개변수...... ) ; 바디가 없다.중괄호가 없음
			 * 	
			 * 	2. 인터페이스  구현
			 *		class 클래스명 implements 인터페이스명 ==> extends는 안됨 같은 인터페이스끼리만 가능
			 * 	@Override	
			 * 	public 반환형 추상메소드(매개변수  ........){
			 * 			인터페이스에 정의된 추상메소드를 구현해야한다(재정의)
			 * 	}
			 * 	
			 * 	3. 인터페이스 다중상속 가능 
			 * 	interface 인터페이스명 extends 인터페이스명1, 인터페이스명2 .... 여러개가능{	
			 * 
			 * 	}
			 * 
			 * 	class 클래스명 extends 클래스명1, ..... 클래스명 n {  ==> 불가함 클래스는 단일 상속만 가능
			 * 
			 * 	}
			 * 
			 * 	4. 상속과 구현을 동시
			 * 	class 클래스명 extends 부모클래스 implements 인터페이스명1...인터페이스명2.....여러개가능
			 * 	
			 * 	}
			 * 
			 * 
			 */
			
				
	
	
			
	
	
	
	
	
}
